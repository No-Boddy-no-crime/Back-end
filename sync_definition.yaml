openapi: "3.0.0"
info:
  version: 1.0.0
  title: Clue Game Server
  license:
    name: MIT
servers:
  - url: http://megretson.com/v1
paths:
  /games:
    get:
      summary: List all games
      operationId: listGames
      tags:
        - games
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of games
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Games"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a game
      operationId: createGame
      tags:
        - games
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '405':
          description: Invalid input
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
 
  /games/{gameId}:
    get:
      summary: Info for a specific game
      operationId: showGameById
      tags:
        - games
      parameters:
        - name: gameId
          in: path
          required: true
          description: The id of the game to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"
        '404':
          description: Not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: end a game
      operationId: endGame
      tags:
        - games
      parameters:
        - name: gameId
          in: path
          required: true
          description: The id of the game to retrieve
          schema:
            type: string
      responses:
        '200':
          description: OK
        '404':
          description: Not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Start a specific game
      operationId: startGame
      tags:
        - games
      parameters:
        - name: gameId
          in: path
          required: true
          description: The id of the game to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"
        '404':
          description: Not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  
  /games/{gameId}/player:
    post:
      summary: Join a game as a player
      operationId: createPlayer
      tags:
        - player
      parameters:
        - name: gameId
          in: path
          required: true
          description: The id of the game to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /games/{gameId}/player/{playerId}:
    get:
      summary: Info for a specific player
      operationId: showPlayerById
      tags:
        - player
      parameters:
        - name: gameId
          in: path
          required: true
          description: The id of the game to retrieve
          schema:
            type: string
        - name: playerId
          in: path
          required: true
          description: The id of the player to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
        '400':
          description: Invalid ID supplied
        '404':
          description: Game not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /games/{gameId}/player/{playerId}/move:
    post:
      summary: Create a new player move
      operationId: movePlayer
      tags:
        - player
      parameters:
        - name: gameId
          in: path
          required: true
          description: The id of the game to retrieve
          schema:
            type: string
        - name: playerId
          in: path
          required: true
          description: The id of the player to retrieve
          schema:
            type: string
      responses:
        '201':
          description: Player response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '400':
          description: Invalid ID supplied
        '404':
          description: Game not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /games/{gameId}/player/{playerId}/suggestion:
    post:
      summary: Create a new player suggestion
      operationId: makeSuggestion
      tags:
        - player
      parameters:
        - name: gameId
          in: path
          required: true
          description: The id of the game to retrieve
          schema:
            type: string
        - name: playerId
          in: path
          required: true
          description: The id of the player to retrieve
          schema:
            type: string
      responses:
        '201':
          description: Rebuttal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RebuttalCard'
        '400':
          description: Invalid ID supplied
        '404':
          description: Game not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /games/{gameId}/player/{playerId}/accusation:
    post:
      summary: Create a new player accusation
      operationId: makeAccusation
      tags:
        - player
      parameters:
        - name: gameId
          in: path
          required: true
          description: The id of the game to retrieve
          schema:
            type: string
        - name: playerId
          in: path
          required: true
          description: The id of the player to retrieve
          schema:
            type: string
      responses:
        '201':
          description: Player response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '400':
          description: Invalid ID supplied
        '404':
          description: Game not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:

    Player:
      description: An object which stores a player's unique ID, and which character they currently are
      type: object
      properties:
        player_id:
          $ref: "#/components/schemas/PlayerId"
        character_name:
          type: string
   
    PlayerId:
      type: string
      format: int64
    
    RebuttalCard:
      description: The card someone responds to a suggestion with
      type: object
      properties:
        player:
            $ref: "#/components/schemas/Player"
        card:
          type: string

    CardSet:
      description: A set of cards representing a possible crime
      type: object
      properties:
        player:
          $ref: "#/components/schemas/Player"
        room:
          type: string
        weapon:
          type: string
        character_name:
          type: string

    Game:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        status:
          type: string
    
    Games:
      type: array
      items:
        $ref: "#/components/schemas/Game"
    
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string