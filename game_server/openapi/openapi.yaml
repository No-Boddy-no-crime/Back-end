openapi: 3.0.0
info:
  license:
    name: MIT
  title: Clue Game Server
  version: 1.0.0
servers:
- url: http://megretson.com/v1
paths:
  /games:
    get:
      operationId: list_games
      parameters:
      - description: How many items to return at one time (max 100)
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Games'
          description: A paged array of games
          headers:
            x-next:
              description: A link to the next page of responses
              explode: false
              schema:
                type: string
              style: simple
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: List all games
      tags:
      - games
      x-openapi-router-controller: game_server.controllers.games_controller
    post:
      operationId: create_game
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: Successful operation
        "405":
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Create a game
      tags:
      - games
      x-openapi-router-controller: game_server.controllers.games_controller
  /games/{gameId}:
    get:
      operationId: show_game_by_id
      parameters:
      - description: The id of the game to retrieve
        explode: false
        in: path
        name: gameId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: Expected response to a valid request
        "404":
          description: Not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Info for a specific game
      tags:
      - games
      x-openapi-router-controller: game_server.controllers.games_controller
  /games/{gameId}/players:
    post:
      operationId: create_player
      parameters:
      - description: The id of the game to retrieve
        explode: false
        in: path
        name: gameId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: Successful operation
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Join a game as a player
      tags:
      - player
      x-openapi-router-controller: game_server.controllers.player_controller
  /games/{gameId}/players/{playerId}:
    get:
      operationId: show_player_by_id
      parameters:
      - description: The id of the game to retrieve
        explode: false
        in: path
        name: gameId
        required: true
        schema:
          type: number
        style: simple
      - description: The id of the player to retrieve
        explode: false
        in: path
        name: playerId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: Expected response to a valid request
        "400":
          description: Invalid ID supplied
        "404":
          description: Game not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Info for a specific player
      tags:
      - player
      x-openapi-router-controller: game_server.controllers.player_controller
  /games/{gameId}/players/{playerId}/accusation:
    post:
      operationId: make_accusation
      parameters:
      - description: The id of the game to retrieve
        explode: false
        in: path
        name: gameId
        required: true
        schema:
          type: number
        style: simple
      - description: The id of the player to retrieve
        explode: false
        in: path
        name: playerId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: Player response
        "400":
          description: Invalid ID supplied
        "404":
          description: Game not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Create a new player accusation
      tags:
      - player
      x-openapi-router-controller: game_server.controllers.player_controller
  /games/{gameId}/players/{playerId}/move:
    post:
      operationId: move_player
      parameters:
      - description: The id of the game to retrieve
        explode: false
        in: path
        name: gameId
        required: true
        schema:
          type: number
        style: simple
      - description: The id of the player to retrieve
        explode: false
        in: path
        name: playerId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: Player response
        "400":
          description: Invalid ID supplied
        "404":
          description: Game not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Create a new player move
      tags:
      - player
      x-openapi-router-controller: game_server.controllers.player_controller
  /games/{gameId}/players/{playerId}/suggestion:
    post:
      operationId: make_suggestion
      parameters:
      - description: The id of the game to retrieve
        explode: false
        in: path
        name: gameId
        required: true
        schema:
          type: number
        style: simple
      - description: The id of the player to retrieve
        explode: false
        in: path
        name: playerId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RebuttalCard'
          description: Rebuttal
        "400":
          description: Invalid ID supplied
        "404":
          description: Game not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Create a new player suggestion
      tags:
      - player
      x-openapi-router-controller: game_server.controllers.player_controller
components:
  schemas:
    Player:
      description: An object which stores a player's unique ID, and which character
        they currently are
      properties:
        player_id:
          format: int64
          title: player_id
          type: string
        character_name:
          title: character_name
          type: string
      title: Player
      type: object
    PlayerId:
      format: int64
      title: player_id
      type: string
    RebuttalCard:
      description: The card someone responds to a suggestion with
      example:
        card: card
        player:
          player_id: player_id
          character_name: character_name
      properties:
        player:
          $ref: '#/components/schemas/Player'
        card:
          title: card
          type: string
      title: RebuttalCard
      type: object
    CardSet:
      description: A set of cards representing a possible crime
      properties:
        player:
          $ref: '#/components/schemas/Player'
        room:
          type: string
        weapon:
          type: string
        character_name:
          type: string
      type: object
    Game:
      properties:
        game_board_id:
          format: int64
          title: id
          type: integer
        name:
          title: name
          type: string
        board:
          title: board
          type: array
          items:
            $ref: '#/components/schemas/CardSet'
        status:
          title: status
          type: string
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
      required:
      - id
      - name
      title: Game
      type: object
    Games:
      items:
        $ref: '#/components/schemas/Game'
      type: array
    Error:
      properties:
        code:
          format: int32
          title: code
          type: integer
        message:
          title: message
          type: string
      required:
      - code
      - message
      title: Error
      type: object
