# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from game_server.models.base_model_ import Model
from game_server.models.player import Player
from game_server import util

from game_server.models.player import Player  # noqa: E501

class CardSet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, player=None, room=None, weapon=None, character_name=None):  # noqa: E501
        """CardSet - a model defined in OpenAPI

        :param player: The player of this CardSet.  # noqa: E501
        :type player: Player
        :param room: The room of this CardSet.  # noqa: E501
        :type room: str
        :param weapon: The weapon of this CardSet.  # noqa: E501
        :type weapon: str
        :param character_name: The character_name of this CardSet.  # noqa: E501
        :type character_name: str
        """
        self.openapi_types = {
            'player': Player,
            'room': str,
            'weapon': str,
            'character_name': str
        }

        self.attribute_map = {
            'player': 'player',
            'room': 'room',
            'weapon': 'weapon',
            'character_name': 'character_name'
        }

        self._player = player
        self._room = room
        self._weapon = weapon
        self._character_name = character_name

    @classmethod
    def from_dict(cls, dikt) -> 'CardSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CardSet of this CardSet.  # noqa: E501
        :rtype: CardSet
        """
        return util.deserialize_model(dikt, cls)

    @property
    def player(self):
        """Gets the player of this CardSet.


        :return: The player of this CardSet.
        :rtype: Player
        """
        return self._player

    @player.setter
    def player(self, player):
        """Sets the player of this CardSet.


        :param player: The player of this CardSet.
        :type player: Player
        """

        self._player = player

    @property
    def room(self):
        """Gets the room of this CardSet.


        :return: The room of this CardSet.
        :rtype: str
        """
        return self._room

    @room.setter
    def room(self, room):
        """Sets the room of this CardSet.


        :param room: The room of this CardSet.
        :type room: str
        """

        self._room = room

    @property
    def weapon(self):
        """Gets the weapon of this CardSet.


        :return: The weapon of this CardSet.
        :rtype: str
        """
        return self._weapon

    @weapon.setter
    def weapon(self, weapon):
        """Sets the weapon of this CardSet.


        :param weapon: The weapon of this CardSet.
        :type weapon: str
        """

        self._weapon = weapon

    @property
    def character_name(self):
        """Gets the character_name of this CardSet.


        :return: The character_name of this CardSet.
        :rtype: str
        """
        return self._character_name

    @character_name.setter
    def character_name(self, character_name):
        """Sets the character_name of this CardSet.


        :param character_name: The character_name of this CardSet.
        :type character_name: str
        """

        self._character_name = character_name
