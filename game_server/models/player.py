# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from game_server.models.base_model_ import Model
from game_server import util


class Player(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, player_id=None, character_name=None):  # noqa: E501
        """Player - a model defined in OpenAPI

        :param player_id: The player_id of this Player.  # noqa: E501
        :type player_id: str
        :param character_name: The character_name of this Player.  # noqa: E501
        :type character_name: str
        """
        self.openapi_types = {
            'player_id': str,
            'character_name': str
        }

        self.attribute_map = {
            'player_id': 'player_id',
            'character_name': 'character_name'
        }

        self._player_id = player_id
        self._character_name = character_name

    @classmethod
    def from_dict(cls, dikt) -> 'Player':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The player of this Player.  # noqa: E501
        :rtype: Player
        """
        return util.deserialize_model(dikt, cls)

    @property
    def player_id(self):
        """Gets the player_id of this Player.

        a unique identifier for a player  # noqa: E501

        :return: The player_id of this Player.
        :rtype: str
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this Player.

        a unique identifier for a player  # noqa: E501

        :param player_id: The player_id of this Player.
        :type player_id: str
        """

        self._player_id = player_id

    @property
    def character_name(self):
        """Gets the character_name of this Player.


        :return: The character_name of this Player.
        :rtype: str
        """
        return self._character_name

    @character_name.setter
    def character_name(self, character_name):
        """Sets the character_name of this Player.


        :param character_name: The character_name of this Player.
        :type character_name: str
        """

        self._character_name = character_name
