# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from game_server.models.base_model_ import Model
from game_server.models.player import Player
from game_server import util

from game_server.models.player import Player  # noqa: E501

class RebuttalCard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, player=None, card=None):  # noqa: E501
        """RebuttalCard - a model defined in OpenAPI

        :param player: The player of this RebuttalCard.  # noqa: E501
        :type player: Player
        :param card: The card of this RebuttalCard.  # noqa: E501
        :type card: str
        """
        self.openapi_types = {
            'player': Player,
            'card': str
        }

        self.attribute_map = {
            'player': 'player',
            'card': 'card'
        }

        self._player = player
        self._card = card

    @classmethod
    def from_dict(cls, dikt) -> 'RebuttalCard':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RebuttalCard of this RebuttalCard.  # noqa: E501
        :rtype: RebuttalCard
        """
        return util.deserialize_model(dikt, cls)

    @property
    def player(self):
        """Gets the player of this RebuttalCard.


        :return: The player of this RebuttalCard.
        :rtype: Player
        """
        return self._player

    @player.setter
    def player(self, player):
        """Sets the player of this RebuttalCard.


        :param player: The player of this RebuttalCard.
        :type player: Player
        """

        self._player = player

    @property
    def card(self):
        """Gets the card of this RebuttalCard.


        :return: The card of this RebuttalCard.
        :rtype: str
        """
        return self._card

    @card.setter
    def card(self, card):
        """Sets the card of this RebuttalCard.


        :param card: The card of this RebuttalCard.
        :type card: str
        """

        self._card = card
